print("Assuming that the modules pandas and numpy are previously installed...")
print("If not, please install them using the command: %pip install -r ../requirements.txt or pip install pandas numpy")

import pandas as pd
import numpy as np

# 1. Load the dataset
print("Loading dataset...")
print("Asumning the file is in the same directory as this script and it is named 'detalle_boletas.csv'.")
detalle_boletas = pd.read_csv('../data/detalle_boletas.csv',sep=',', encoding='utf-8')
# Display the first 5 rows of the dataset to check if it was loaded correctly
print(detalle_boletas.head())

print(detalle_boletas.dtypes)

# 2. Modify dataset
# a) Delete the column "Precio_prod" because the prices are incorrect.
# b) Create a column "Pais_Venta", because the company has intention to get into the international market in the near future. 
# For now all the values of this column should be "Chile".
# c) Change column name "NXXX" to "Num Boleta" to make it more descriptive.

detalle_boletas = detalle_boletas.drop(columns=['Precio_prod'])
print(detalle_boletas.head())

detalle_boletas['Pais_Venta'] = 'Chile'
print(detalle_boletas.head())

detalle_boletas = detalle_boletas.rename(columns={'NXXX': 'Num Boleta'})
print(detalle_boletas.head())


# 3. Data cleansing
# a) There are some products with ID "4XXXXXX" y Num Boleta "55417XXXXXXX". Delete any row in the dataset that 
# contains these values, becuase they were not correctly generated by the system and it should not be considered in the analysis.
# b) The column Fecha has extra characters. Clean the column in order to obtain the format YYYY/MM/DD (without extra characters).
# Particularly, identify which extra characters exist in the column besides "/" or numbers and remove them.

filter = (detalle_boletas['ID'].str.contains('4XXXXX')) | (detalle_boletas['Num Boleta'].str.contains('55417XXXXXXX'))
print("Rows to be removed based on filter:")
print(detalle_boletas[filter])


detalle_boletas = detalle_boletas.drop(detalle_boletas[filter].index)
print(detalle_boletas.head())


# Identified extra characters in the 'Fecha' column
# The characters to be removed are: '{', '.', '_', '-', '!'
# Replaced with empty string and recognized with regex
detalle_boletas['Fecha'] = detalle_boletas['Fecha'].str.replace(r'[{._\-!]', '', regex=True)
print(detalle_boletas.head())

# 4. Data extraction
# Calculate the descriptive statistics of the column Cantidad for each existing product and print it to the console.
# The descriptive statistics should include mean, standard deviation, minimum and maximum values. See image.

pivot_table_boletas = detalle_boletas.pivot_table(index=['ID'], values=['Cantidad'], aggfunc={np.amax, np.amin, np.mean, np.std})
print(pivot_table_boletas.head(10))

# 5. Data aggregation
# Now that the information is clean on detalle_boletas, generate column "Anho" (with the year of the column Fecha) and a column "Mes" (with the month of the column Fecha) and a column "Dia" (with the day of the column Fecha).
# This columns should be added to the dataframe detalle_boletas. Then, delete the column Fecha.

separated_date = detalle_boletas['Fecha'].str.split('/', expand=True)
print(separated_date.head())

separated_date.columns = ['Anho', 'Mes', 'Dia']
detalle_boletas = detalle_boletas.join(separated_date)
print(detalle_boletas.head())

detalle_boletas= detalle_boletas.drop(columns=['Fecha'])
print(detalle_boletas.head())

# 6. Data integration: Load Products
# Load the file "Lista productos.csv" as a data frame and name it "lista_productos".
print("Loading dataset...")
print("Asumning the file is in the same directory as this script and it is named 'Lista productos.csv'.")
lista_productos = pd.read_csv('../data/Lista productos.csv', sep=',', encoding='utf-8')
print(lista_productos.head(10))

print(lista_productos.dtypes)

# 7. Data integration: Merge dataframes
# Merge the dataframes detalle_boletas and lista_productos using the column "ID". The new dataframe should be named "detalle_boletas2".

lista_productos['ID'] = lista_productos['ID'].astype(str)

detalle_boletas2 = detalle_boletas.merge(lista_productos, on='ID', how='left')
print(detalle_boletas2.head(20))

# 8. Total Revenue
# Calculate how much revenue each receipt (boleta) generated from the sale of products.
# To do this, add a new column named ```Ingreso total``` to the DataFrame ```detalle_boletas2```.
# This column must contain the values resulting from multiplying the ```Precio Unitario``` column by the ```Cantidad ```column.
# Print the DataFrame ```detalle_boletas2``` with this new column to the console.

ingreso_total = lambda x: x['Cantidad'] * x['Precio Unitario']

detalle_boletas2['Ingreso total'] = ingreso_total(detalle_boletas2)
print(detalle_boletas2.head())

# 9. Descriptive statistic Total Revenue
# Finally, calculate descriptive statistics of the column ```Ingreso total``` for each of the products that exist.
# The descriptive statistics you must calculate are: mean (media), standard deviation (desviación estándar), minimum (mínimo), and maximum (máximo).

descriptive_statistic = detalle_boletas2.pivot_table(index=['ID'], values=['Ingreso total'], aggfunc={np.amax, np.amin, np.mean, np.std, np.sum})
print(descriptive_statistic.head(10))